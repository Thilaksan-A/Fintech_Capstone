"""create crypto_asset, crypto_source, and crypto_market_data tables

Revision ID: 4470b2a3014b
Revises: c5e9bad0b632
Create Date: 2025-07-03 22:30:53.570615

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4470b2a3014b'
down_revision = 'c5e9bad0b632'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crypto_asset',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ranking', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('crypto_source',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('crypto_market_data',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('interval', sa.String(length=8), nullable=False),
    sa.Column('market_cap', sa.Numeric(), nullable=True),
    sa.Column('volume', sa.Numeric(), nullable=True),
    sa.Column('ingested_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['crypto_source.id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['crypto_asset.symbol'], ),
    sa.PrimaryKeyConstraint('symbol', 'source_id', 'timestamp', 'interval')
    )
    with op.batch_alter_table('crypto_market_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_crypto_market_data_timestamp'), ['timestamp'], unique=False)

    # Promote to hypertable
    op.execute("""
        SELECT create_hypertable('crypto_market_data', 'timestamp', if_not_exists => TRUE);
    """)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crypto_market_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_crypto_market_data_timestamp'))

    op.drop_table('crypto_market_data')
    op.drop_table('crypto_source')
    op.drop_table('crypto_asset')
    # ### end Alembic commands ###
