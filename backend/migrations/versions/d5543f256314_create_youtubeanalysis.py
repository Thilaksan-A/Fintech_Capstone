"""Create YoutubeAnalysis

Revision ID: d5543f256314
Revises: f14ddc1620e6
Create Date: 2025-07-22 21:14:10.605613

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd5543f256314'
down_revision = 'f14ddc1620e6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('youtube_comment_analysis',
    sa.Column('comment_id', sa.String(length=50), nullable=False),
    sa.Column('crypto_symbol', sa.String(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('analysed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['youtube_comment.comment_id'], ),
    sa.ForeignKeyConstraint(['crypto_symbol'], ['crypto_asset.symbol'], ),
    sa.PrimaryKeyConstraint('comment_id', 'crypto_symbol', 'timestamp')
    )
    with op.batch_alter_table('youtube_comment_analysis', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_youtube_comment_analysis_timestamp'), ['timestamp'], unique=False)

    # Promote to hypertable
    op.execute("""
        SELECT create_hypertable('youtube_comment_analysis', 'timestamp', if_not_exists => TRUE);
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('youtube_comment_analysis', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_youtube_comment_analysis_timestamp'))

    op.drop_table('youtube_comment_analysis')
    # ### end Alembic commands ###
